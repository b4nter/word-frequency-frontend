@page "/frequentwords"
@inject HttpClient Http

<PageTitle>Word Frequency</PageTitle>

<h1>Word Frequency</h1>

<p>Display most frequent words from news outlet titles.</p>

@if (words == null)
{
    <p><em>Loading...</em></p>
}
else
{
    var wordsToDisplay = 15;

    Dictionary<string, int> grouped = GroupWords(words);

    var orderedWords = grouped.OrderByDescending(word => word.Value)
                              .Take(wordsToDisplay);

    foreach (KeyValuePair<string, int> word in orderedWords)
    {
        <ul>
            <li>@word.Key - @word.Value</li>
        </ul>
    }

}

@code {
    private WordFrequency[]? words;

    protected override async Task OnInitializedAsync()
    {
        words = await Http.GetFromJsonAsync<WordFrequency[]>("api/WordFrequency");
    }

    public class WordFrequency
    {
        public string Word { get; set; }
        public int Frequency { get; set; }
        public string NewsOutlet { get; set; }
    }

    public static Dictionary<string, int> GroupWords(WordFrequency[] words)
    {
        var grouped = new Dictionary<string, int>();
        foreach (var word in words)
        {
            if (grouped.ContainsKey(word.Word))
            {
                grouped[word.Word] += word.Frequency;
            }
            else
            {
                grouped.Add(word.Word, word.Frequency);
            }
        }

        return grouped;
    }
}
